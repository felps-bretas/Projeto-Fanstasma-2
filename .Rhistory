r<-'Andre'
pi
r
r<-2.5
pi
A<-pi*r^2
A
r<-3
pi
A<-pi*r^2
A
r
area_circulo(5)
return(B)
return(A)
ot_fun_quad (1,1,0)
> ot_fun_quad (1,1,0)
> ot_fun_quad (1,1,0)
ot_fun_quad (1,1,0)
function(r){}
function(r){A<-pi*r^2 return(A)}
function(r){A<-pi*r^2}
area<-function(r) {}
area
area(2.5)
area<-function(r) {                                                                                     A<-pi*r^2                                                                                        return(A)}
renan<-function(a,b,c) {x_ot <- -b/2*a return(x_ot) }
renan<-function(a,b,c)
{x_ot <- -b/2*a}
area<-function(r)
A<-pi*r^2
area(2.5)
---
title: "lista1-Computação em Estatística"
---
title: "lista1_Computação em Estatística"
---
title: "lista1 Computação em Estatística"
---
title: "lista 1 Computação em Estatística"
---
title: "lista1"
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
---
title: "lista1"
rsq<-function(x,y) {
cor(x,y)^2
}
install.packages("knitr")
library(knitr)
iris %>%
head%>%
kable(format="html")
iris %>%
head%>%
kable(format="html")
iris
iris<-iris
library(tidyverse)
setwd("C:/UnB/Estatística Exploratória")
trabalho<-read.csv("trabalho.csv")
trabalho$GF<-c(trabalho$G1+trabalho$G2+trabalho$G3)
trabalho$GFmean<-c((trabalho$G1+trabalho$G2+trabalho$G3)/3)
setwd("C:/UnB/Estatística Exploratória/trabalho")
trabalho<-read.csv("trabalho.csv")
trabalho<-read.csv("trabalho.csv")
setwd("C:/UnB/Estatística Exploratória/trabalho")
trabalho<-read.csv("trabalho.csv")
trabalho<-read.csv("trabalho.csv")
rm(iris)
library(ggplot2)
REnan"
date: "2024-05-09"
trabalho<-read.csv("trabalho.csv")
setwd("C:/UnB/R programação/Atividades")
trabalho<-read.csv("trabalho.csv")
trabalho<-read.csv("trabalho.csv")
trabalho$GF<-c(trabalho$G1+trabalho$G2+trabalho$G3)
trabalho$GFmean<-c((trabalho$G1+trabalho$G2+trabalho$G3)/3)
trabalho<-read.csv("trabalho.csv")
setwd("C:/UnB/R programação/Atividades")
S<-read.csv("trabalho.csv")
S<-read.csv("trabalho.csv")
S$GF<-c((S$G1+S$G2+S$G3)/3)
S<-read.csv("trabalho.csv")
setwd("C:/UnB/R programação/Atividades")
S<-read.csv("trabalho.csv")
S<-read.csv("student-por.csv")
setwd("C:/UnB/R programação/Atividades")
trabalho<-read.csv("student-por.csv")
median(2:7)
IMC_por_esporte %>%
group_by(Esporte) %>%
print_quadro_resumo(var_name = IMC)
library(tidyverse)
library(readxl)
library(rcompanion)
IMC_por_esporte %>%
group_by(Esporte) %>%
print_quadro_resumo(var_name = IMC)
print_quadro_resumo <- function(data, var_name, title="Medidas resumo da(o) [nome da variável]", label="quad:quadro_resumo1"){
var_name <- substitute(var_name)
data <- data %>%
summarize(`Média` = round(mean(!!sym(var_name)),2),
`Desvio Padrão` = round(sd(!!sym(var_name)),2),
`Variância` = round(var(!!sym(var_name)),2),
`Mínimo` = round(min(!!sym(var_name)),2),
`1º Quartil` = round(quantile(!!sym(var_name), probs = .25),2),
`Mediana` = round(quantile(!!sym(var_name), probs = .5),2),
`3º Quartil` = round(quantile(!!sym(var_name), probs = .75),2),
`Máximo` = round(max(!!sym(var_name)),2)) %>%
t() %>%
as.data.frame() %>%
rownames_to_column()
latex <- str_c("\\begin{quadro}[H]
\t\\setlength{\t\\tabcolsep}{9pt}
\t\\renewcommand{\t\\arraystretch}{1.20}
\t\\caption{", title, "}
\t\\centering
\t\\begin{adjustbox}{max width=\\textwidth}
\t\\begin{tabular} {", sep="")
col_count <- ncol(data)
row_count <- nrow(data)
latex <- str_c(latex, "| l |\n", sep=" ")
for (i in seq(2, col_count))
{
numCount <- data[i, -c(1)] %>%
as.numeric() %>%
{floor(log10(.)) + 1} %>%
max()
latex <- str_c(latex, "\t\t\tS[table-format = ", numCount ,".2]\n", sep="")
}
latex <- str_c(latex, "\t\t\t|}\n\t\\hline\n\t\t", sep="")
if (col_count > 2)
{
for (i in seq(1,col_count))
{
if (i == 1)
latex <- str_c(latex, "\\textbf{Estatística}", sep="")
else
latex <- str_c(latex, " \\textbf{", data[1, i], "}", sep="")
if (i < col_count)
latex <- str_c(latex, "&", sep=" ")
else
latex <- str_c(latex, "\\\\\n", sep=" ")
}
}
else
{
latex <- str_c(latex, "\\textbf{Estatística} & \\textbf{Valor} \\\\\n", sep="")
}
latex <- str_c(latex, "\t\t\\hline\n", sep="")
if (col_count > 2)
starting_number <- 2
else
starting_number <- 1
for (i in seq(starting_number, row_count))
{
latex <- str_c(latex, "\t\t", str_flatten(t(data[i,]), collapse = " & "), " \\\\\n")
}
latex <- str_c(latex, "\t\\hline
\t\\end{tabular}
\t\\label{", label, "}
\t\\end{adjustbox}
\\end{quadro}", sep="")
writeLines(latex)
}
IMC_por_esporte %>%
group_by(Esporte) %>%
print_quadro_resumo(var_name = IMC)
Olimpiadas_A <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "Athina")
setwd("~/GitHub/Projeto-Fanstasma-2")
library(tidyverse)
library(readxl)
library(rcompanion)
Olimpiadas_A <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "Athina")
Olimpiadas_L <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "London")
Olimpiadas_RJ <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "Rio de Janeiro")
Olimpiadas_S <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "Sydney")
Olimpiadas_B <- read_excel("Olimpiadas 2000 - 2016.xlsx",
sheet = "Beijing")
Olimpiadas_A <- Olimpiadas_A%>%
filter(!is.na(Olimpiadas_A$Medal))
Olimpiadas_L <- Olimpiadas_L%>%
filter(!is.na(Olimpiadas_L$Medal))
Olimpiadas_RJ <- Olimpiadas_RJ%>%
filter(!is.na(Olimpiadas_RJ$Medal))
Olimpiadas_S <- Olimpiadas_S%>%
filter(!is.na(Olimpiadas_S$M3d4l))
Olimpiadas_B <- Olimpiadas_B%>%
filter(!is.na(Olimpiadas_B$Medal))
colnames(Olimpiadas_A) <- c("Nomes","Sexo","Idade","Altura (cm)",
"Peso (lbs)","País","Esporte",
"Evento","Medalha")
colnames(Olimpiadas_L) <- c("Nomes","Sexo","Idade","Altura (cm)",
"Peso (lbs)","País","Esporte",
"Evento","Medalha")
colnames(Olimpiadas_RJ) <- c("Nomes","Sexo","Idade","Altura (cm)",
"Peso (lbs)","País","Esporte",
"Evento","Medalha")
colnames(Olimpiadas_S) <- c("Nomes","Sexo","Idade","Altura (cm)",
"Peso (lbs)","País","Esporte",
"Evento","Medalha")
colnames(Olimpiadas_B) <- c("Nomes","Sexo","Idade","Altura (cm)",
"Peso (lbs)","País","Esporte",
"Evento","Medalha")
Olimpiadas_2000_2016 <- rbind(Olimpiadas_A,Olimpiadas_B,Olimpiadas_L,
Olimpiadas_RJ,Olimpiadas_S)
estat_colors <- c(
"#A11D21", "#003366", "#CC9900",
"#663333", "#FF6600", "#CC9966",
"#999966", "#006606", "#008091",
"#041835", "#666666" )
theme_estat <- function(...) {
theme <- ggplot2::theme_bw() +
ggplot2::theme(
axis.title.y = ggplot2::element_text(colour = "black", size = 12),
axis.title.x = ggplot2::element_text(colour = "black", size = 12),
axis.text = ggplot2::element_text(colour = "black", size = 9.5)
,
panel.border = ggplot2::element_blank(),
axis.line = ggplot2::element_line(colour = "black"),
legend.position = "top",
...
)
return(
list(
theme,
scale_fill_manual(values = estat_colors),
scale_colour_manual(values = estat_colors)
)
)
}
mulheres<-Olimpiadas_2000_2016[,c(2,6,9)]
mulheres2<-mulheres[mulheres$Sexo=="F",]
medalhas <- mulheres2 %>%
filter(!is.na(Medalha)) %>%
count(País) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
)
medalhas2<-medalhas[medalhas$n>=220,]
medalhas2[1,1] <- "Austrália"
medalhas2[3,1] <- "Alemanha"
medalhas2[4,1] <- "Rússia"
medalhas2[5,1] <- "Estados Unidos"
ggplot(medalhas2) +
aes(x = fct_reorder(País, n, .desc=T), y = n, label = label) +
geom_bar(stat = "identity", fill = "#A11D21", width = 0.7) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, #hjust = .5,
size = 3
) +
labs(x = "Países", y = "Frequência de Medalhistas") +
theme_estat()
Olimpiadas_2000_2016$`Altura (m)` <- ((Olimpiadas_2000_2016$`Altura (cm)`)/100)
Olimpiadas_2000_2016$`Peso (kg)` <- round(((Olimpiadas_2000_2016$`Peso (lbs)`)*
0.453592),2)
Olimpiadas_2000_2016$IMC <- round(((Olimpiadas_2000_2016$`Peso (kg)`)/
(Olimpiadas_2000_2016$`Altura (m)`**2)),2)
IMC_por_esporte <- Olimpiadas_2000_2016[,c(1,2,3,6,7,10,11,12)]
IMC_por_esporte <- filter(IMC_por_esporte,Esporte %in% c("Gymnastics",
"Football","Judo",
"Athletics",
"Badminton"))
IMC_por_esporte[IMC_por_esporte$Esporte=="Athletics",5] <- "Atletismo"
IMC_por_esporte[IMC_por_esporte$Esporte=="Football",5] <- "Futebol"
IMC_por_esporte[IMC_por_esporte$Esporte=="Gymnastics",5] <- "Ginástica"
IMC_por_esporte[IMC_por_esporte$Esporte=="Judo",5] <- "Judô"
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Altura (m)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Peso (kg)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Nomes))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(IMC))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Sexo))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Idade))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(País))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Esporte))
ggplot(IMC_por_esporte) +
aes(x = reorder(Esporte, IMC, FUN = median), y = IMC) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white") +
labs(x = "Esporte", y = "IMC por atleta (kg/m²)") +
theme_estat()
total_med <- Olimpiadas_2000_2016[,c(1,9)]
total_med2 <- total_med %>%
count(Medalha,Nomes) %>%
mutate(
freq = n,
label = str_c(n) %>% str_squish()
)
total_med2 <- arrange(total_med2, desc(n))
total_med2 <- filter(total_med2,Nomes %in% c("Ryan Steven Lochte",
"Michael Fred Phelps, II",
"Natalie Anne Coughlin (-Hall)"))
tm <- Olimpiadas_2000_2016[,1]
total_med3 <- tm %>%
count(Nomes) %>%
mutate(
freq = n,
label = str_c(n) %>% str_squish()
)
total_med3 <- arrange(total_med3, desc(n))
total_med3 <- filter(total_med3,Nomes %in% c("Ryan Steven Lochte",
"Michael Fred Phelps, II",
"Natalie Anne Coughlin (-Hall)"))
total <- left_join(total_med2, total_med3, by = "Nomes")
total <- total[,c(1,2,3,6)]
colnames(total) <- c("Medalha", "Nomes", "freq", "total")
total[total$Medalha=="Gold",1] <- "Ouro"
total[total$Medalha=="Silver",1] <- "Prata"
total[total$Nomes=="Michael Fred Phelps, II",2] <- "Michael Phelps"
total[total$Nomes=="Ryan Steven Lochte",2] <- "Ryan Lochte"
total[total$Nomes=="Natalie Anne Coughlin (-Hall)",2] <- "Natalie Coughlin"
total$`freq relativa` <- round((total$freq/total$total) * 100, 1)
porcentagens <- str_c(total$`freq relativa`, "%") %>% str_replace("
\\.", ",")
legendas <- str_squish(str_c(total$freq, " (", porcentagens, ")")
)
ggplot(total) +
aes(
x = fct_reorder(Nomes, Medalha, .desc = T), y = freq,
fill = Medalha, label = legendas) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3.0
) +
labs(x = "Atletas", y = "Frequência") +
theme_estat()
total_med4 <- filter(total_med,Nomes %in% c("Ryan Steven Lochte",
"Michael Fred Phelps, II",
"Natalie Anne Coughlin (-Hall)"))
tabela <- xtabs(~total_med4$Nomes+total_med4$Medalha)
tabela
peso_altura <- Olimpiadas_2000_2016[,c(1,10,11)]
peso_altura <- peso_altura %>%
filter(!is.na(`Altura (m)`))
peso_altura <- peso_altura %>%
filter(!is.na(`Peso (kg)`))
peso_altura <- distinct(peso_altura)
ggplot(peso_altura) +
aes(x = `Peso (kg)`, y = `Altura (m)`) +
geom_point(colour = "#A11D21", size = 3, alpha = 0.7) +
labs(
x = "Peso",
y = "Altura"
) +
theme_estat()
cor(peso_altura$`Peso (kg)`,peso_altura$`Altura (m)`,method = "spearman")
print_quadro_resumo <- function(data, var_name, title="Medidas resumo da(o) [nome da variável]", label="quad:quadro_resumo1"){
var_name <- substitute(var_name)
data <- data %>%
summarize(`Média` = round(mean(!!sym(var_name)),2),
`Desvio Padrão` = round(sd(!!sym(var_name)),2),
`Variância` = round(var(!!sym(var_name)),2),
`Mínimo` = round(min(!!sym(var_name)),2),
`1º Quartil` = round(quantile(!!sym(var_name), probs = .25),2),
`Mediana` = round(quantile(!!sym(var_name), probs = .5),2),
`3º Quartil` = round(quantile(!!sym(var_name), probs = .75),2),
`Máximo` = round(max(!!sym(var_name)),2)) %>%
t() %>%
as.data.frame() %>%
rownames_to_column()
latex <- str_c("\\begin{quadro}[H]
\t\\setlength{\t\\tabcolsep}{9pt}
\t\\renewcommand{\t\\arraystretch}{1.20}
\t\\caption{", title, "}
\t\\centering
\t\\begin{adjustbox}{max width=\\textwidth}
\t\\begin{tabular} {", sep="")
col_count <- ncol(data)
row_count <- nrow(data)
latex <- str_c(latex, "| l |\n", sep=" ")
for (i in seq(2, col_count))
{
numCount <- data[i, -c(1)] %>%
as.numeric() %>%
{floor(log10(.)) + 1} %>%
max()
latex <- str_c(latex, "\t\t\tS[table-format = ", numCount ,".2]\n", sep="")
}
latex <- str_c(latex, "\t\t\t|}\n\t\\hline\n\t\t", sep="")
if (col_count > 2)
{
for (i in seq(1,col_count))
{
if (i == 1)
latex <- str_c(latex, "\\textbf{Estatística}", sep="")
else
latex <- str_c(latex, " \\textbf{", data[1, i], "}", sep="")
if (i < col_count)
latex <- str_c(latex, "&", sep=" ")
else
latex <- str_c(latex, "\\\\\n", sep=" ")
}
}
else
{
latex <- str_c(latex, "\\textbf{Estatística} & \\textbf{Valor} \\\\\n", sep="")
}
latex <- str_c(latex, "\t\t\\hline\n", sep="")
if (col_count > 2)
starting_number <- 2
else
starting_number <- 1
for (i in seq(starting_number, row_count))
{
latex <- str_c(latex, "\t\t", str_flatten(t(data[i,]), collapse = " & "), " \\\\\n")
}
latex <- str_c(latex, "\t\\hline
\t\\end{tabular}
\t\\label{", label, "}
\t\\end{adjustbox}
\\end{quadro}", sep="")
writeLines(latex)
}
peso_altura %>%
print_quadro_resumo(var_name = "Altura (m)")
peso_altura %>%
print_quadro_resumo(var_name = "Peso (kg)")
IMC_por_esporte %>%
group_by(Esporte) %>%
print_quadro_resumo(var_name = IMC)
IMC_por_esporte <- distinct(IMC_por_esporte)
View(IMC_por_esporte)
IMC_por_esporte <- distinct(IMC_por_esporte$Nomes)
Olimpiadas_2000_2016$`Altura (m)` <- ((Olimpiadas_2000_2016$`Altura (cm)`)/100)
Olimpiadas_2000_2016$`Peso (kg)` <- round(((Olimpiadas_2000_2016$`Peso (lbs)`)*
0.453592),2)
Olimpiadas_2000_2016$IMC <- round(((Olimpiadas_2000_2016$`Peso (kg)`)/
(Olimpiadas_2000_2016$`Altura (m)`**2)),2)
IMC_por_esporte <- Olimpiadas_2000_2016[,c(1,2,3,6,7,10,11,12)]
IMC_por_esporte <- filter(IMC_por_esporte,Esporte %in% c("Gymnastics",
"Football","Judo",
"Athletics",
"Badminton"))
IMC_por_esporte[IMC_por_esporte$Esporte=="Athletics",5] <- "Atletismo"
IMC_por_esporte[IMC_por_esporte$Esporte=="Football",5] <- "Futebol"
IMC_por_esporte[IMC_por_esporte$Esporte=="Gymnastics",5] <- "Ginástica"
IMC_por_esporte[IMC_por_esporte$Esporte=="Judo",5] <- "Judô"
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Altura (m)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Peso (kg)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Nomes))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(IMC))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Sexo))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Idade))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(País))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Esporte))
IMC_por_esporte <- distinct(IMC_por_esporte$Nomes)
IMC_por_esporte <- distinct(IMC_por_esporte)
Olimpiadas_2000_2016$`Peso (kg)` <- round(((Olimpiadas_2000_2016$`Peso (lbs)`)*
0.453592),2)
Olimpiadas_2000_2016$IMC <- round(((Olimpiadas_2000_2016$`Peso (kg)`)/
(Olimpiadas_2000_2016$`Altura (m)`**2)),2)
IMC_por_esporte <- Olimpiadas_2000_2016[,c(1,2,3,6,7,10,11,12)]
IMC_por_esporte <- filter(IMC_por_esporte,Esporte %in% c("Gymnastics",
"Football","Judo",
"Athletics",
"Badminton"))
IMC_por_esporte[IMC_por_esporte$Esporte=="Athletics",5] <- "Atletismo"
IMC_por_esporte[IMC_por_esporte$Esporte=="Football",5] <- "Futebol"
IMC_por_esporte[IMC_por_esporte$Esporte=="Gymnastics",5] <- "Ginástica"
IMC_por_esporte[IMC_por_esporte$Esporte=="Judo",5] <- "Judô"
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Altura (m)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(`Peso (kg)`))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Nomes))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(IMC))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Sexo))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Idade))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(País))
IMC_por_esporte <- IMC_por_esporte %>%
filter(!is.na(Esporte))
